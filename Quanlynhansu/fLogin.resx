<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAQDAwQDAwQEAwQFBAQFBgoHBgYGBg0JCggKDw0QEA8NDw4R
        ExgUERIXEg4PFRwVFxkZGxsbEBQdHx0aHxgaGxr/2wBDAQQFBQYFBgwHBwwaEQ8RGhoaGhoaGhoaGhoa
        GhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhr/wAARCAEOAWgDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5AFdFpl39qi2Of3qDn/aHrXPYqSGV4JFkiO11OQa+7pz5JHiT
        jzI61RTgKhsbpL2LenDjhk9D/hVrbXpxs1dHIMAzS4pw4NLjNaokbto208ClxTERgelJipMYoxQBGBRt
        zUgWnBKdibkWwUoWpQnWlC4osZtkQX1oCVOEzShKdiblfZRsqxspClKwXKxXg1GV61aK8UwrUtGqZUK9
        absNWSlMK1lylplZkqMpVop60zYamwyrs603b1qyUpmzNTYogwaay5qz5dJs25J6DmpaBM4+7ObiY/7Z
        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
        iRj2/lRUbHgk9gD+f+eaKktH/9k=
</value>
  </data>
</root>